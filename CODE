/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package farmmanagementgui;

/**
 *
 * @author AcE
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class FarmManagementGUI {
    public static void main(String[] args) {
        // Create the frame for the main window
        JFrame frame = new JFrame("CALAMANSI FARM SYSTEM");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 600);
        frame.setLayout(new BorderLayout());

        // Welcome panel
        JPanel welcomePanel = new JPanel();
        welcomePanel.setLayout(new GridLayout(2, 1));
        JLabel welcomeLabel = new JLabel("WELCOME", SwingConstants.CENTER);
        welcomeLabel.setFont(new Font("Arial", Font.BOLD, 30));
        welcomePanel.add(welcomeLabel);
        JLabel pressEnterLabel = new JLabel("Press Enter", SwingConstants.CENTER);
        welcomePanel.add(pressEnterLabel);
        frame.add(welcomePanel, BorderLayout.NORTH);

        // Main Menu Panel
        JPanel mainMenuPanel = new JPanel();
        JButton mainMenuButton = new JButton("Main Menu");
        JButton exitButton = new JButton("Exit");
        mainMenuPanel.add(mainMenuButton);
        mainMenuPanel.add(exitButton);
        frame.add(mainMenuPanel, BorderLayout.SOUTH);

        // Tabbed Pane for Maintenance and Harvest sections
        JTabbedPane tabbedPane = new JTabbedPane();
        frame.add(tabbedPane, BorderLayout.CENTER);

        // Maintenance tab
        JPanel maintenancePanel = new JPanel();
        maintenancePanel.setLayout(new GridLayout(6, 2, 20, 20));

        // Maintenance fields
        JTextField irrigationCostField = new JTextField();
        JTextField fertilizerField = new JTextField();
        JTextField pesticideField = new JTextField();
        JTextField gasField = new JTextField();
        JTextField grassCuttingField = new JTextField();

        maintenancePanel.add(new JLabel("Irrigation Cost:"));
        maintenancePanel.add(irrigationCostField);
        maintenancePanel.add(new JLabel("Fertilizer:"));
        maintenancePanel.add(fertilizerField);
        maintenancePanel.add(new JLabel("Pesticide:"));
        maintenancePanel.add(pesticideField);
        maintenancePanel.add(new JLabel("Gas:"));
        maintenancePanel.add(gasField);
        maintenancePanel.add(new JLabel("Grass Cutting:"));
        maintenancePanel.add(grassCuttingField);

        JButton computeMaintenanceButton = new JButton("Compute Maintenance Cost");
        maintenancePanel.add(computeMaintenanceButton);
        tabbedPane.add("MAINTENANCE", maintenancePanel);

        // Harvest tab with GridBagLayout for better alignment
        JPanel harvestPanel = new JPanel();
        harvestPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.LINE_END; // Align to the right
        gbc.insets = new Insets(5, 5, 5, 5);

        // Harvest fields
        JTextField priceGoodField = new JTextField(10); // Set smaller width
        JTextField priceRejectField = new JTextField(10); // Set smaller width
        JTextField qtyGoodField = new JTextField(10); // Set smaller width
        JTextField qtyRejectField = new JTextField(10); // Set smaller width
        JTextField salaryFarmersField = new JTextField(10); // Set smaller width
        JTextField totalEarnedField = new JTextField(10); // Set smaller width
        totalEarnedField.setEditable(false);

        gbc.gridx = 0;
        gbc.gridy = 0;
        harvestPanel.add(new JLabel("Price of Good Calamansi per Redbag:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(priceGoodField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        harvestPanel.add(new JLabel("Price of Reject Calamansi per Redbag:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(priceRejectField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        harvestPanel.add(new JLabel("Quantity of Good Calamansi Redbag:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(qtyGoodField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 3;
        harvestPanel.add(new JLabel("Quantity of Reject Calamansi Redbag:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(qtyRejectField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 4;
        harvestPanel.add(new JLabel("Salary of Farmers:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(salaryFarmersField, gbc);

        gbc.gridx = 0;
        gbc.gridy = 5;
        harvestPanel.add(new JLabel("Total Earned Money:"), gbc);
        gbc.gridx = 1;
        harvestPanel.add(totalEarnedField, gbc);

        JButton computeHarvestButton = new JButton("Compute Total Income");
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        harvestPanel.add(computeHarvestButton, gbc);
        tabbedPane.add("HARVEST", harvestPanel);

        // Action listener for Compute Maintenance Cost
        computeMaintenanceButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    double irrigationCost = Double.parseDouble(irrigationCostField.getText());
                    double fertilizer = Double.parseDouble(fertilizerField.getText());
                    double pesticide = Double.parseDouble(pesticideField.getText());
                    double gas = Double.parseDouble(gasField.getText());
                    double grassCutting = Double.parseDouble(grassCuttingField.getText());

                    // Calculate total maintenance cost
                    double totalMaintenanceCost = irrigationCost + fertilizer + pesticide + gas + grassCutting;

                    // Show a new JFrame with the maintenance cost details
                    JFrame maintenanceFrame = new JFrame("Maintenance Costs");
                    maintenanceFrame.setSize(400, 300);
                    maintenanceFrame.setLayout(new GridLayout(6, 1, 10, 10));
                    maintenanceFrame.add(new JLabel("Maintenance Costs:"));
                    maintenanceFrame.add(new JLabel("Irrigation Cost: " + irrigationCost));
                    maintenanceFrame.add(new JLabel("Fertilizer: " + fertilizer));
                    maintenanceFrame.add(new JLabel("Pesticide: " + pesticide));
                    maintenanceFrame.add(new JLabel("Total Maintenance Cost: " + totalMaintenanceCost));
                    maintenanceFrame.setVisible(true);

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Please enter valid numbers for costs.");
                }
            }
        });

        // Action listener for Compute Total Income
        computeHarvestButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    double priceGood = Double.parseDouble(priceGoodField.getText());
                    double priceReject = Double.parseDouble(priceRejectField.getText());
                    int qtyGood = Integer.parseInt(qtyGoodField.getText());
                    int qtyReject = Integer.parseInt(qtyRejectField.getText());
                    double salaryFarmers = Double.parseDouble(salaryFarmersField.getText());

                    // Calculate total earned money
                    double totalPriceGood = priceGood * qtyGood;
                    double totalPriceReject = priceReject * qtyReject;
                    double totalEarnedMoney = totalPriceGood + totalPriceReject + salaryFarmers;

                    totalEarnedField.setText(String.valueOf(totalEarnedMoney));

                    // Show a new JFrame with the results
                    JFrame resultsFrame = new JFrame("Harvest Results");
                    resultsFrame.setSize(400, 300);
                    resultsFrame.setLayout(new GridLayout(6, 1, 10, 10));
                    resultsFrame.add(new JLabel("Harvest Details:"));
                    resultsFrame.add(new JLabel("Price of Good Calamansi: " + totalPriceGood));
                    resultsFrame.add(new JLabel("Price of Reject Calamansi: " + totalPriceReject));
                    resultsFrame.add(new JLabel("Salary of Farmers: " + salaryFarmers));
                    resultsFrame.add(new JLabel("Total Earned Money: " + totalEarnedMoney));
                    resultsFrame.setVisible(true);

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Please enter valid numbers for harvest details.");
                }
            }
        });

        // Action listener for Exit Button
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });

        // Show the frame
        frame.setVisible(true);
    }
}
