/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package javaapplication6;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.border.TitledBorder;

public class JavaApplication6 {

    private static JFrame frame;
    private static JTextField maintenanceCostField;

    public static void main(String[] args) {
        showStartMenu();
    }

    private static void showStartMenu() {
        // Create the frame for the Start Menu
        frame = new JFrame("CALAMANSI FARM SYSTEM");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 600); // Increased the size of the frame
        frame.setLayout(new BorderLayout());

        // Welcome panel
        JPanel welcomePanel = new JPanel();
        welcomePanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(10, 0, 10, 0);
        JLabel welcomeLabel = new JLabel("Welcome", SwingConstants.CENTER);
        welcomeLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(welcomeLabel, gbc);

        gbc.gridy++;
        JLabel toLabel = new JLabel("to", SwingConstants.CENTER);
        toLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(toLabel, gbc);

        gbc.gridy++;
        JLabel systemLabel = new JLabel("Calamansi Farm System", SwingConstants.CENTER);
        systemLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(systemLabel, gbc);

        frame.add(welcomePanel, BorderLayout.CENTER);

        // Main Menu Panel
        JPanel mainMenuPanel = new JPanel();
        JButton startButton = new JButton("Start");
        JButton exitButton = new JButton("Exit");
        startButton.setPreferredSize(new Dimension(250, 50));
        exitButton.setPreferredSize(new Dimension(250, 50));
        mainMenuPanel.add(startButton);
        mainMenuPanel.add(exitButton);
        frame.add(mainMenuPanel, BorderLayout.SOUTH);

        // Start button action
        startButton.addActionListener(e -> showCalamansiFarm());

        // Exit button action
        exitButton.addActionListener(e -> System.exit(0));

        frame.setVisible(true);
    }

    private static void showCalamansiFarm() {
        frame.getContentPane().removeAll();
        frame.setLayout(new BorderLayout());

        // Welcome panel
        JPanel welcomePanel = new JPanel();
        welcomePanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(10, 0, 10, 0);
        JLabel welcomeLabel = new JLabel("Welcome", SwingConstants.CENTER);
        welcomeLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(welcomeLabel, gbc);

        gbc.gridy++;
        JLabel toLabel = new JLabel("to", SwingConstants.CENTER);
        toLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(toLabel, gbc);

        gbc.gridy++;
        JLabel systemLabel = new JLabel("Calamansi Farm System", SwingConstants.CENTER);
        systemLabel.setFont(new Font("Arial", Font.BOLD, 20));
        welcomePanel.add(systemLabel, gbc);

        frame.add(welcomePanel, BorderLayout.CENTER);

        // Main Menu Panel
        JPanel mainMenuPanel = new JPanel();
        JButton mainMenuButton = new JButton("Main Menu");
        JButton exitButton = new JButton("Exit");
        mainMenuButton.setPreferredSize(new Dimension(250, 50));
        exitButton.setPreferredSize(new Dimension(250, 50));
        mainMenuPanel.add(mainMenuButton);
        mainMenuPanel.add(exitButton);
        frame.add(mainMenuPanel, BorderLayout.SOUTH);

        // Tabbed Pane for Maintenance and Harvest sections
        JTabbedPane tabbedPane = new JTabbedPane();
        frame.add(tabbedPane, BorderLayout.CENTER);

        // Centering the panels
        GridBagConstraints gbcTab = new GridBagConstraints();
        gbcTab.gridx = 0;
        gbcTab.gridy = 0;
        gbcTab.weightx = 1;
        gbcTab.weighty = 1;
        gbcTab.anchor = GridBagConstraints.CENTER;
        gbcTab.fill = GridBagConstraints.NONE;

        // Maintenance Tab
        JPanel maintenanceContainer = createSectionContainer("Maintenance", new Color(255, 240, 220));
        JPanel maintenancePanel = createMaintenancePanel();
        maintenanceContainer.setPreferredSize(new Dimension(600, 400)); // Increased the size of the container
        maintenanceContainer.add(maintenancePanel);
        JPanel maintenanceWrapper = new JPanel(new GridBagLayout());
        maintenanceWrapper.add(maintenanceContainer, gbcTab);
        tabbedPane.addTab("MAINTENANCE", maintenanceWrapper);

        // Harvest Tab
        JPanel harvestContainer = createSectionContainer("Harvest", new Color(220, 255, 220));
        JPanel harvestPanel = createHarvestPanel();
        harvestContainer.setPreferredSize(new Dimension(600, 400)); // Increased the size of the container
        harvestContainer.add(harvestPanel);
        JPanel harvestWrapper = new JPanel(new GridBagLayout());
        harvestWrapper.add(harvestContainer, gbcTab);
        tabbedPane.addTab("HARVEST", harvestWrapper);

        // Main Menu button action
        mainMenuButton.addActionListener(e -> showStartMenu());

        // Exit button action
        exitButton.addActionListener(e -> System.exit(0));

        frame.revalidate();
        frame.repaint();
    }

    private static JPanel createMaintenancePanel() {
        JPanel maintenancePanel = new JPanel();
        maintenancePanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.LINE_END;
        gbc.insets = new Insets(5, 5, 5, 5);

        // Fields and labels
        JTextField irrigationCostField = new JTextField(6);
        JTextField fertilizerField = new JTextField(6);
        JTextField pesticideField = new JTextField(6);
        JTextField gasField = new JTextField(6);
        JTextField grassCuttingField = new JTextField(6);

        JLabel irrigationCostLabel = new JLabel("Irrigation Cost:");
        JLabel fertilizerLabel = new JLabel("Fertilizer:");
        JLabel pesticideLabel = new JLabel("Pesticide:");
        JLabel gasLabel = new JLabel("Gas:");
        JLabel grassCuttingLabel = new JLabel("Grass Cutting:");

        // Fonts
        Font largerFont = new Font("Arial", Font.PLAIN, 16);
        irrigationCostLabel.setFont(largerFont);
        fertilizerLabel.setFont(largerFont);
        pesticideLabel.setFont(largerFont);
        gasLabel.setFont(largerFont);
        grassCuttingLabel.setFont(largerFont);

        irrigationCostField.setFont(largerFont);
        fertilizerField.setFont(largerFont);
        pesticideField.setFont(largerFont);
        gasField.setFont(largerFont);
        grassCuttingField.setFont(largerFont);

        // Add fields to panel
        gbc.gridx = 0;
        gbc.gridy = 0;
        maintenancePanel.add(createFieldPanel(irrigationCostLabel, irrigationCostField), gbc);

        gbc.gridy++;
        maintenancePanel.add(createFieldPanel(fertilizerLabel, fertilizerField), gbc);

        gbc.gridy++;
        maintenancePanel.add(createFieldPanel(pesticideLabel, pesticideField), gbc);

        gbc.gridy++;
        maintenancePanel.add(createFieldPanel(gasLabel, gasField), gbc);

        gbc.gridy++;
        maintenancePanel.add(createFieldPanel(grassCuttingLabel, grassCuttingField), gbc);

        // Add Compute and Reset buttons
        JPanel buttonPanel = new JPanel();
        JButton computeButton = new JButton("Compute");
        JButton resetButton = new JButton("Reset");
        buttonPanel.add(computeButton);
        buttonPanel.add(resetButton);
        gbc.gridy++;
        gbc.anchor = GridBagConstraints.CENTER;
        maintenancePanel.add(buttonPanel, gbc);

        // Compute button action
        computeButton.addActionListener(e -> {
            double irrigationCost = Double.parseDouble(irrigationCostField.getText());
            double fertilizerCost = Double.parseDouble(fertilizerField.getText());
            double pesticideCost = Double.parseDouble(pesticideField.getText());
            double gasCost = Double.parseDouble(gasField.getText());
            double grassCuttingCost = Double.parseDouble(grassCuttingField.getText());

            double totalMaintenanceCost = irrigationCost + fertilizerCost + pesticideCost + gasCost + grassCuttingCost;

            maintenanceCostField.setText(String.valueOf(totalMaintenanceCost));

            String receipt = "Maintenance Receipt:\n" +
                             "---------------------------------\n" +
                             "Irrigation Cost: " + irrigationCost + "\n" +
                             "Fertilizer Cost: " + fertilizerCost + "\n" +
                             "Pesticide Cost: " + pesticideCost + "\n" +
                             "Gas Cost: " + gasCost + "\n" +
                             "Grass Cutting Cost: " + grassCuttingCost + "\n" +
                             "---------------------------------\n" +
                             "Total Maintenance Cost: " + totalMaintenanceCost + "\n" +
                             "---------------------------------";

            JOptionPane.showMessageDialog(null, receipt);
        });

                // Reset button action
        resetButton.addActionListener(e -> {
            irrigationCostField.setText("");
            fertilizerField.setText("");
            pesticideField.setText("");
            gasField.setText("");
            grassCuttingField.setText("");
        });

        return maintenancePanel;
    }

    private static JPanel createHarvestPanel() {
        JPanel harvestPanel = new JPanel();
        harvestPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.LINE_END;
        gbc.insets = new Insets(5, 5, 5, 5);

        // Fields and labels
        JTextField priceGoodField = new JTextField(8);
        JTextField priceRejectField = new JTextField(8);
        JTextField qtyGoodField = new JTextField(8);
        JTextField qtyRejectField = new JTextField(8);
        JTextField salaryField = new JTextField(8);
        maintenanceCostField = new JTextField(8);

        JLabel priceGoodLabel = new JLabel("Price of Good Calamansi:");
        JLabel priceRejectLabel = new JLabel("Price of Reject Calamansi:");
        JLabel qtyGoodLabel = new JLabel("Quantity of Good Calamansi:");
        JLabel qtyRejectLabel = new JLabel("Quantity of Reject Calamansi:");
        JLabel salaryLabel = new JLabel("Salary of Farmers:");
        JLabel maintenanceCostLabel = new JLabel("Maintenance Cost:");

        Font largerFont = new Font("Arial", Font.PLAIN, 16);
        priceGoodLabel.setFont(largerFont);
        priceRejectLabel.setFont(largerFont);
        qtyGoodLabel.setFont(largerFont);
        qtyRejectLabel.setFont(largerFont);
        salaryLabel.setFont(largerFont);
        maintenanceCostLabel.setFont(largerFont);

        priceGoodField.setFont(largerFont);
        priceRejectField.setFont(largerFont);
        qtyGoodField.setFont(largerFont);
        qtyRejectField.setFont(largerFont);
        salaryField.setFont(largerFont);
        maintenanceCostField.setFont(largerFont);

        // Add fields to panel
        gbc.gridx = 0;
        gbc.gridy = 0;
        harvestPanel.add(createFieldPanel(priceGoodLabel, priceGoodField), gbc);

        gbc.gridy++;
        harvestPanel.add(createFieldPanel(priceRejectLabel, priceRejectField), gbc);

        gbc.gridy++;
        harvestPanel.add(createFieldPanel(qtyGoodLabel, qtyGoodField), gbc);

        gbc.gridy++;
        harvestPanel.add(createFieldPanel(qtyRejectLabel, qtyRejectField), gbc);

        gbc.gridy++;
        harvestPanel.add(createFieldPanel(salaryLabel, salaryField), gbc);

        gbc.gridy++;
        harvestPanel.add(createFieldPanel(maintenanceCostLabel, maintenanceCostField), gbc);

        // Add Compute and Reset buttons
        JPanel buttonPanel = new JPanel();
        JButton computeButton = new JButton("Compute");
        JButton resetButton = new JButton("Reset");
        buttonPanel.add(computeButton);
        buttonPanel.add(resetButton);
        gbc.gridy++;
        gbc.anchor = GridBagConstraints.CENTER;
        harvestPanel.add(buttonPanel, gbc);

        // Compute button action
        computeButton.addActionListener(e -> {
            double priceGood = Double.parseDouble(priceGoodField.getText());
            double priceReject = Double.parseDouble(priceRejectField.getText());
            double qtyGood = Double.parseDouble(qtyGoodField.getText());
            double qtyReject = Double.parseDouble(qtyRejectField.getText());
            double salary = Double.parseDouble(salaryField.getText());
            double maintenanceCost = Double.parseDouble(maintenanceCostField.getText());

            double totalPriceGood = priceGood * qtyGood;
            double totalPriceReject = priceReject * qtyReject;
            double totalHarvestValue = totalPriceGood + totalPriceReject - salary - maintenanceCost;

            String receipt = "Harvest Receipt:\n" +
                             "---------------------------------\n" +
                             "Total Price of Good Calamansi: " + totalPriceGood + "\n" +
                             "Total Price of Reject Calamansi: " + totalPriceReject + "\n" +
                             "Total Salary of Farmers: " + salary + "\n" +
                             "Maintenance Cost: " + maintenanceCost + "\n" +
                             "---------------------------------\n" +
                             "Total Harvest Value: " + totalHarvestValue + "\n" +
                             "---------------------------------";

            JOptionPane.showMessageDialog(null, receipt);
        });

        // Reset button action
        resetButton.addActionListener(e -> {
            priceGoodField.setText("");
            priceRejectField.setText("");
            qtyGoodField.setText("");
            qtyRejectField.setText("");
            salaryField.setText("");
            maintenanceCostField.setText("");
        });

        return harvestPanel;
    }

    private static JPanel createFieldPanel(JLabel label, JTextField field) {
        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.LEFT));
        panel.add(label);
        panel.add(field);
        return panel;
    }

    private static JPanel createSectionContainer(String title, Color color) {
        JPanel container = new JPanel();
        container.setLayout(new BorderLayout());
        container.setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createLineBorder(Color.BLACK),
                title, TitledBorder.LEFT, TitledBorder.TOP));
        container.setBackground(color);
        return container;
    }
}
